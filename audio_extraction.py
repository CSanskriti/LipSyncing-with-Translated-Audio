# -*- coding: utf-8 -*-
"""AudioExtraction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zm6B_nqMeOKW1JtkXzvUegJGsHYkY6Zs
"""

# Import necessary libraries
from moviepy.editor import VideoFileClip, AudioFileClip
from base64 import b64encode
from IPython.display import HTML, Audio

def extract_audio_from_video(video_path, audio_path):
    """
    Extracts audio from a video file and saves it as an MP3 file.

    Parameters:
    video_path (str): The path to the video file.
    audio_path (str): The path where the extracted audio will be saved.
    """
    # Load the video clip
    videoclip = VideoFileClip(video_path)

    # Extract the audio
    audioclip = videoclip.audio

    # Write the audio to an MP3 file
    audioclip.write_audiofile(audio_path)

    # Close the handles
    audioclip.close()
    videoclip.close()

def display_video(video_path):
    """
    Displays a video in an IPython notebook.

    Parameters:
    video_path (str): The path to the video file.
    """
    mp4 = open(video_path,'rb').read()
    data_url = "data:video/mp4;base64," + b64encode(mp4).decode()
    return HTML(f"""
        <video width="40%" height="80%" controls>
            <source src="{data_url}" type="video/mp4">
        </video>""")

def display_audio(audio_path):
    """
    Loads and plays an audio file.

    Parameters:
    audio_path (str): The path to the audio file.
    """
    return Audio(audio_path)

def check_lengths(video_path, audio_path):
    """
    Prints the lengths of the video and audio files.

    Parameters:
    video_path (str): The path to the video file.
    audio_path (str): The path to the audio file.
    """
    # Load the video and audio files
    video = VideoFileClip(video_path)
    audio = AudioFileClip(audio_path)

    # Print the lengths of the video and audio files
    print(f"Video length: {video.duration:.2f} seconds")
    print(f"Audio length: {audio.duration:.2f} seconds")

# Example usage:
# extract_audio_from_video("/kaggle/input/video-data/Original_recording5.mp4", "/kaggle/working/audio.mp3")
# display_video("/kaggle/input/video-data/Original_recording5.mp4")
# display_audio("/kaggle/working/audio.mp3")
# check_lengths("/kaggle/input/video-data/Original_recording5.mp4", "/kaggle/working/audio.mp3")